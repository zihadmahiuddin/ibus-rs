// This file was generated by gir (https://github.com/gtk-rs/gir)
// from /usr/share/gir-1.0
// from ../gir-files
// DO NOT EDIT

use crate::{Object,Serializable,XML};
use glib::{prelude::*,translate::*};
use std::{fmt};

glib::wrapper! {
    #[doc(alias = "IBusObservedPath")]
    pub struct ObservedPath(Object<ffi::IBusObservedPath, ffi::IBusObservedPathClass>) @extends Serializable, Object;

    match fn {
        type_ => || ffi::ibus_observed_path_get_type(),
    }
}

impl ObservedPath {
        pub const NONE: Option<&'static ObservedPath> = None;
    

    #[doc(alias = "ibus_observed_path_new")]
    pub fn new(path: &str, fill_stat: bool) -> ObservedPath {
        assert_initialized_main_thread!();
        unsafe {
            from_glib_none(ffi::ibus_observed_path_new(path.to_glib_none().0, fill_stat.into_glib()))
        }
    }

    #[doc(alias = "ibus_observed_path_new_from_xml_node")]
    #[doc(alias = "new_from_xml_node")]
    pub fn from_xml_node(node: &mut XML, fill_stat: bool) -> ObservedPath {
        assert_initialized_main_thread!();
        unsafe {
            from_glib_none(ffi::ibus_observed_path_new_from_xml_node(node.to_glib_none_mut().0, fill_stat.into_glib()))
        }
    }
}

pub trait ObservedPathExt: 'static {
    #[doc(alias = "ibus_observed_path_check_modification")]
    fn check_modification(&self) -> bool;

    #[doc(alias = "ibus_observed_path_traverse")]
    fn traverse(&self, dir_only: bool) -> Vec<ObservedPath>;
}

impl<O: IsA<ObservedPath>> ObservedPathExt for O {
    fn check_modification(&self) -> bool {
        unsafe {
            from_glib(ffi::ibus_observed_path_check_modification(self.as_ref().to_glib_none().0))
        }
    }

    fn traverse(&self, dir_only: bool) -> Vec<ObservedPath> {
        unsafe {
            FromGlibPtrContainer::from_glib_full(ffi::ibus_observed_path_traverse(self.as_ref().to_glib_none().0, dir_only.into_glib()))
        }
    }
}

impl fmt::Display for ObservedPath {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        f.write_str("ObservedPath")
    }
}
